plugins {
    alias(libs.plugins.android.application)
}

// Load local properties file if it exists (for signing config)
def localPropertiesFile = new File(rootProject.projectDir, "gradle.properties.local")
if (localPropertiesFile.exists()) {
    def localProperties = new Properties()
    localPropertiesFile.withInputStream { localProperties.load(it) }
    localProperties.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
}

android {
    namespace 'com.example.management_linen'
    compileSdk 36

    defaultConfig {
        applicationId "com.example.management_linen"
        minSdk 26
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword project.hasProperty('KEYSTORE_PASSWORD') ? KEYSTORE_PASSWORD : ""
            keyAlias project.hasProperty('KEY_ALIAS') ? KEY_ALIAS : "key0"
            keyPassword project.hasProperty('KEY_PASSWORD') ? KEY_PASSWORD : ""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.okhttp
    implementation libs.volley
    implementation libs.cardview
    implementation libs.recyclerview
    implementation libs.picasso
    implementation libs.glide
    implementation libs.itext7.core
    implementation files('libs/rfiddrive-release.aar')
    implementation files('libs/UHFDevice.jar')
}